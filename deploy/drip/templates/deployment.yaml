apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "drip.fullname" . }}
  labels:
    {{- include "drip.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "drip.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "drip.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: assets
          emptyDir: {} 
        - name: nginx-config
          configMap:
            name: {{ include "drip.fullname" . }}-nginx
      initContainers:
        - name: asset-mover
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [bash, -c]
          args: ["cp -r /home/reporting/staticassets/* /assets"]
          volumeMounts:
            - name: assets
              mountPath: /assets
      containers:
        - name: {{ .Chart.Name }}-asset-service
          image: nginx:1.16.0
          command: ["/usr/sbin/nginx", "-g", "daemon off;"]
          volumeMounts:
            - name: assets
              mountPath: /var/www/static
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /reports/healthcheck
          #     port: 80
          #     httpHeaders:
          #       - name: Host
          #         value: {{ .Values.configEnv.APP_HOST }}
          # readinessProbe:
          #   httpGet:
          #     path: /reports/healthcheck
          #     port: 80
          #     httpHeaders:
          #       - name: Host
          #         value: {{ .Values.configEnv.APP_HOST }}
        - name: {{ .Chart.Name }}-web-service
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - secretRef:
              name: drip
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     httpHeaders:
          #       - name: Host
          #         value: {{ .Values.settingsSecrets.allowedHost }}
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #     httpHeaders:
          #       - name: Host
          #         value: {{ .Values.settingsSecrets.allowedHost }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
